---
import type { CollectionEntry } from 'astro:content';

interface Props {
  note: CollectionEntry<'notes'>;
}

const { note } = Astro.props;

const publishedString = new Date(note.data.published).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<style>
  .latest-note {
    display: flex;
    flex-direction: column;
    gap: 0.4rem;
    margin: 1.5rem 0;
    text-decoration: none;
  }

  .latest-note:hover {
    color: var(--accent);
  }

  .latest-note .title {
    font-size: 1.3rem;
    font-weight: 600;
    color: var(--text-light);
    text-decoration: none;
    line-height: 1.2;
    letter-spacing: -0.02em;
    margin: 0;
  }

  .latest-note:hover .title {
    color: var(--accent-dark);
  }

  .latest-note .header {
    font-size: 1.15rem;
    line-height: 1.3;
    color: var(--text-light);
    font-weight: 400;
    opacity: var(--opacity-light);
    letter-spacing: -0.01em;
  }

  .latest-note .description {
    font-size: 1.15rem;
    line-height: 1.3;
    color: var(--text-light);
    margin: 0;
  }

  @media (max-width: var(--breakpointmobile)) {
    .latest-note .title {
      font-size: 1.3rem;
    }
    
    .latest-note .description {
      font-size: 1.1rem;
    }

    .latest-note .header {
      font-size: 1.1rem;
      line-height: 1.5;
    }
  }
</style>

<a class="latest-note" href={`/${note.id}`}>
  <p class="title">
    Latest: {note.data.title}
  </p>

  <div class="header">
    {publishedString}{note.data.readingTime && ` Â· ${note.data.readingTime}`}
  </div>
  

  {note.data.description && (
    <p class="description">{note.data.description}</p>
  )}
</a>
