---
---

<style>
  footer {
    height: auto;
    padding-bottom: 8rem;
  }
  
  footer h2 {
    margin: 0;
  }

  .newsletter {
    max-width: 32rem;
  }

  .newsletter h2 {
    font-size: 1.5rem;
    margin-bottom: 0rem;
    color: var(--text-dark);
    font-weight: 600;
  }

  .newsletter p {
    font-size: 1.1rem;
    margin-bottom: 1.5rem;
    color: var(--text-light);
    line-height: 1.4;
  }

  .form-container {
    display: flex;
    gap: 0.5rem;
  }

  .email-input {
    flex: 1;
    padding: 0.75rem 1rem;
    font-size: 1rem;
  }

  .email-input:focus {
    outline: none;
    box-shadow: 0 0 0 1px var(--background-core-dark);
  }

  .submit-button {
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
  }

  .submit-button:hover {
    background: var(--background-core-dark);
    cursor: pointer;
  }

  .error-message {
    color: #ef4444;
    font-size: 0.875rem;
    margin-top: 0.5rem;
    display: block;
  }

  .success-message {
    color: #10b981;
    font-size: 0.875rem;
    margin-top: 0.5rem;
    display: block;
  }
</style>

<footer>
  <div class="newsletter">
    <h2>Receive my updates</h2>
    <p>You can follow me via email, <a href="/rss.xml">RSS</a>, <a href="https://x.com/marcelodotapp">Twitter</a>, and <a href="https://instagram.com/marcelodotapp">Instagram</a></p>
    
    <form class="form-container" id="newsletter-form">
      <input 
        type="email" 
        name="email"
        class="email-input"
        placeholder="Enter your email"
        required
      />
      <button type="submit" class="submit-button">
        Sign up
      </button>
    </form>
    <p class="error-message" id="error-message" style="display: none;"></p>
    <p class="success-message" id="success-message" style="display: none;">Thanks for subscribing!</p>
  </div>
</footer>

<script>
  const form = document.getElementById('newsletter-form') as HTMLFormElement;
  const errorMessage = document.getElementById('error-message') as HTMLElement;
  const successMessage = document.getElementById('success-message') as HTMLElement;

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // Reset messages
    errorMessage.style.display = 'none';
    successMessage.style.display = 'none';
    
    const formData = new FormData(form);
    const email = formData.get('email');

    try {
      const response = await fetch('/api/subscribe', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });

      const data = await response.json();

      if (!response.ok) {
        errorMessage.textContent = data.error || 'Failed to subscribe. Please try again.';
        errorMessage.style.display = 'block';
        return;
      }

      // Show success message and reset form
      successMessage.style.display = 'block';
      form.reset();
    } catch (error) {
      errorMessage.textContent = 'Something went wrong. Please try again.';
      errorMessage.style.display = 'block';
    }
  });
</script>
