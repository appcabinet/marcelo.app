---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import NoteHeader from '../components/note/NoteHeader.astro';
import NoteFooter from '../components/note/NoteFooter.astro';
import '../styles/notes.css';

// Get all notes and sort them by published date (newest first)
const notes: CollectionEntry<'notes'>[] = (await getCollection('notes')).sort(
  (a, b) => b.data.published.valueOf() - a.data.published.valueOf()
);

// Format date to match the note page style
function formatDate(date: Date): string {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<html lang="en">
  <head>
    <BaseHead 
      title="Writing | Marcelo Mantilla"
      description="Articles and essays by Marcelo Mantilla"
    />
    <style>
      .writing-list {
        margin-top: 2rem;
      }

      .writing-item {
        margin-bottom: 2.5rem;
      }

      .writing-item h2 {
        font-size: 1.8rem;
        line-height: 1.1;
        margin: 0;
        font-weight: 600;
        letter-spacing: -0.02em;
      }

      .writing-item h2 a {
        color: var(--text-light);
        text-decoration: none;
      }

      .writing-item h2 a:hover {
        color: var(--accent);
      }

      .writing-item .date {
        font-size: 1.15rem;
        line-height: 1.7;
        color: var(--accent-dark);
        margin-top: 0.4rem;
        font-weight: 400;
      }

      .writing-item .description {
        font-size: var(--text-size-default);
        line-height: 1.35;
        margin-top: 0.8rem;
        color: var(--text-light);
      }

      .note-footer-divider {
        height: 1px;
        background-color: var(--background-core-dark);
        margin: 3rem 0;
      }
    </style>
  </head>
  <body>
    <main>
      <div class="prose-container">
        <article class="prose">
          <NoteHeader />
          <div class="article-header">
            <h1 class="title">Writing</h1>
            <p class="date">Essays and articles about software, creativity, and life</p>
          </div>

          <div class="writing-list">
            {notes.map((note) => (
              <div class="writing-item">
                <h2>
                  <a href={`/${note.id}`}>{note.data.title}</a>
                </h2>
                <p class="date">{formatDate(note.data.published)}</p>
                {note.data.description && (
                  <p class="description">{note.data.description}</p>
                )}
              </div>
            ))}
          </div>

          <div class="note-footer-divider" />
          <NoteFooter />
        </article>
      </div>
    </main>
  </body>
</html>
